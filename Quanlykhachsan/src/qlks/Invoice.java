package qlks;
import com.itextpdf.text.Chunk;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileOutputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Font;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;

/**
 *
 * @author I_m Fall
 */
public class Invoice extends javax.swing.JFrame {
    private int accountId;
    public Invoice(int accountId) {
        this.accountId = accountId;
        initComponents();
        loadInvoiceData();
    }

    
    
    private void loadInvoiceData() {
        try {
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/qlks1", "root", "9823"
            );
            String sql = "SELECT i.invoice_id," +
                     "cu.full_name AS customer_name, " +
                     "r.room_number, " +
                     "DATEDIFF(b.end_date, b.start_date) AS number_of_days, " +
                     "i.total_amount, " +
                     "i.status " +
                     "FROM Invoice i " +
                     "JOIN Booking b ON i.booking_id = b.booking_id " +
                     "JOIN Customer cu ON b.customer_id = cu.customer_id " +
                     "JOIN Room r ON b.room_id = r.room_id";
            
            

            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            int stt = 1;
            while (rs.next()) {
                Object[] row = {
                    stt++,
                    rs.getString("invoice_id"),
                    rs.getString("customer_name"),
                    rs.getString("room_number"),
                    rs.getString("number_of_days"),
                    rs.getString("total_amount"),
                    rs.getString("status"),
                };
                model.addRow(row);
            }

            rs.close();
            stmt.close();
            conn.close();

            jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40); 
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);  
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(180);  
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);  
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);   
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);  

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jToggleButton10 = new javax.swing.JToggleButton();
        jToggleButton11 = new javax.swing.JToggleButton();
        jToggleButton14 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton12 = new javax.swing.JToggleButton();
        jToggleButton13 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" ADMIN");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jToggleButton3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton3.setText("Quản lý nhân viên");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton4.setText("Quản lý khách hàng");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jToggleButton5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton5.setText("Thông tin cá nhân");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jToggleButton6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton6.setText("Quản lý dịch vụ");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });

        jToggleButton7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton7.setText("Quản lý khuyến mại");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });

        jToggleButton8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton8.setText("Hóa đơn khách hàng");
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton8ActionPerformed(evt);
            }
        });

        jToggleButton9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton9.setText("Doanh Thu ");
        jToggleButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton9ActionPerformed(evt);
            }
        });

        jToggleButton10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton10.setText("Quản lý phòng");
        jToggleButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton10ActionPerformed(evt);
            }
        });

        jToggleButton11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton11.setText("Quản lý thuê phòng");
        jToggleButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton11ActionPerformed(evt);
            }
        });

        jToggleButton14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton14.setText("Đăng Xuất");
        jToggleButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addComponent(jToggleButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToggleButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addComponent(jToggleButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton4)
                .addGap(5, 5, 5)
                .addComponent(jToggleButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 51, 51));
        jPanel4.setForeground(new java.awt.Color(255, 51, 51));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("HÓA ĐƠN KHÁCH HÀNG");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "ID", "Tên khách hàng", "Phòng thuê", "Số ngày ở", "Tổng tiền", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jToggleButton12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton12.setText("Thanh toán");
        jToggleButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton12ActionPerformed(evt);
            }
        });

        jToggleButton13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jToggleButton13.setText("In hóa đơn");
        jToggleButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jToggleButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton12)
                            .addComponent(jToggleButton13))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        new Employee(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        new Admin(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        new Service(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        new Promotion(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton10ActionPerformed
        new Room(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton10ActionPerformed

    private void jToggleButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton11ActionPerformed
        new Booking(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton11ActionPerformed

    private void jToggleButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton12ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần thanh toán.");
            return;
        }

        // Lấy email từ dòng đang chọn (cột số 2)
        String ID = jTable1.getValueAt(selectedRow, 1).toString();
        String customerName = jTable1.getValueAt(selectedRow, 2).toString();
        String roomNumber = jTable1.getValueAt(selectedRow, 3).toString();
        String numberOfDays = jTable1.getValueAt(selectedRow, 4).toString();
        String totalAmount = jTable1.getValueAt(selectedRow, 5).toString();
        String status = jTable1.getValueAt(selectedRow, 6).toString();

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn thanh toán hóa đơn này này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/qlks1", "root", "9823");
            String sql = "update Invoice set Status = 'PAID' where invoice_id = ? ";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, ID);

            int rowsDeleted = stmt.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(this, "Đã thanh toán hóa đơn.");
                loadInvoiceData(); // Tải lại bảng sau khi xóa
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên để xóa.");
            }

            
            
            
            stmt.close();
            conn.close();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại: " + e.getMessage());
        }
        
       
    }//GEN-LAST:event_jToggleButton12ActionPerformed

    private void printSelectedInvoice() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để in.");
            return;
        }

        try {
            // Lấy dữ liệu từ dòng được chọn
            String invoiceId = jTable1.getValueAt(selectedRow, 1).toString();
            String bookingId = jTable1.getValueAt(selectedRow, 1).toString(); // giả sử cột 0 là booking_id

            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/qlks1", "root", "9823");

            // Lấy thông tin Booking, Customer, Room
            String bookingSql = """
                SELECT i.invoice_id, c.full_name AS customer_name, r.room_number, r.room_category,
                       b.start_date, b.end_date, DATEDIFF(b.end_date, b.start_date) AS number_of_days,
                       r.custom_price, i.total_amount
                FROM Invoice i
                JOIN Booking b ON i.booking_id = b.booking_id
                JOIN Customer c ON b.customer_id = c.customer_id
                JOIN Room r ON b.room_id = r.room_id
                WHERE i.invoice_id = ?
            """;

            PreparedStatement ps = conn.prepareStatement(bookingSql);
            ps.setString(1, invoiceId);
            ResultSet rs = ps.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn.");
                return;
            }

            // Lấy thông tin
            String customerName = rs.getString("customer_name");
            String roomNumber = rs.getString("room_number");
            String roomCategory = rs.getString("room_category");
            String startDate = rs.getString("start_date");
            String endDate = rs.getString("end_date");
            int numberOfDays = rs.getInt("number_of_days");
            double pricePerDay = rs.getDouble("custom_price");
            double totalAmount = rs.getDouble("total_amount");

            // Tạo file PDF
            String fileName = "HoaDon_" + invoiceId + ".pdf";
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();

            // Font Unicode
            BaseFont baseFont = BaseFont.createFont("c:/windows/fonts/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            Font titleFont = new Font(baseFont, 16, Font.BOLD);
            Font normalFont = new Font(baseFont, 12);
            Font boldFont = new Font(baseFont, 12, Font.BOLD);
            DecimalFormat formatter = new DecimalFormat("#,###");

            // Tiêu đề
            Paragraph title = new Paragraph("HÓA ĐƠN THANH TOÁN HOTEL PTIT", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);
            document.add(new Paragraph(" "));

            // Thông tin hóa đơn
            Paragraph mahoadon = new Paragraph();
            mahoadon.add(new Chunk("Mã hóa đơn: ", boldFont));
            mahoadon.add(new Chunk(invoiceId, normalFont));
            document.add(mahoadon);
            
            Paragraph khachhang = new Paragraph();
            khachhang.add(new Chunk("Tên khách hàng: ", boldFont));
            khachhang.add(new Chunk(customerName, normalFont));
            document.add(khachhang);
            
            Paragraph phong = new Paragraph();
            phong.add(new Chunk("Phòng: ", boldFont));
            phong.add(new Chunk(roomNumber + " - " + roomCategory, normalFont));
            document.add(phong);
            
            Paragraph dateInfo = new Paragraph();
            dateInfo.add(new Chunk("NGÀY BẮT ĐẦU: ", boldFont));
            dateInfo.add(new Chunk(startDate + "    ", normalFont)); // thêm khoảng cách giữa 2 phần
            dateInfo.add(new Chunk("NGÀY KẾT THÚC: ", boldFont));
            dateInfo.add(new Chunk(endDate, normalFont));
            document.add(dateInfo);

            Paragraph printDate = new Paragraph();
            printDate.add(new Chunk("NGÀY IN: ", boldFont));
            printDate.add(new Chunk(endDate, normalFont));
            document.add(printDate);

            Paragraph rentalDays = new Paragraph();
            rentalDays.add(new Chunk("SỐ NGÀY THUÊ: ", boldFont));
            rentalDays.add(new Chunk(numberOfDays + "", normalFont));
            document.add(rentalDays);

            Paragraph price = new Paragraph();
            price.add(new Chunk("ĐƠN GIÁ: ", boldFont));
            price.add(new Chunk(formatter.format(pricePerDay) + " VND/ngày", normalFont));
            document.add(price);

            Paragraph totalRoom = new Paragraph();
            totalRoom.add(new Chunk("TỔNG TIỀN PHÒNG: ", boldFont));
            totalRoom.add(new Chunk(formatter.format((numberOfDays * pricePerDay)) + " VND", normalFont));
            document.add(totalRoom);

            document.add(new Paragraph(" "));

            // Dịch vụ sử dụng
            Paragraph dvsd = new Paragraph("DỊCH VỤ SỬ DỤNG", boldFont);
            dvsd.setAlignment(Element.ALIGN_CENTER);
            document.add(dvsd);
            document.add(new Paragraph(" "));

            PdfPTable table = new PdfPTable(5);
            table.setWidths(new int[]{3, 2, 2, 2, 4});
            table.setWidthPercentage(100);

            table.addCell(new PdfPCell(new Phrase("Tên dịch vụ", boldFont)));
            table.addCell(new PdfPCell(new Phrase("Đơn giá", boldFont)));
            table.addCell(new PdfPCell(new Phrase("Số lượng", boldFont)));
            table.addCell(new PdfPCell(new Phrase("Khuyến mãi (%)", boldFont)));
            table.addCell(new PdfPCell(new Phrase("Thành tiền", boldFont)));

            // Truy vấn dịch vụ từ ServiceDetail
            String serviceSql = "SELECT " +
                    "  s.name AS service_name, " +
                    "  sd.service_quantity, " +
                    "  s.unit_price, " +
                    "  p.discount_percent " +
                    "FROM ServiceDetail sd " +
                    "JOIN Service s ON sd.service_id = s.service_id " +
                    "LEFT JOIN Promotion p ON sd.promotion_id = p.promotion_id " +
                    "WHERE sd.booking_id = ? " +
                    "ORDER BY sd.order_date";
        
            PreparedStatement serviceStmt = conn.prepareStatement(serviceSql);
            serviceStmt.setString(1, bookingId);
            ResultSet rsService = serviceStmt.executeQuery();

            double totalService = 0;
            while (rsService.next()) {
                String serviceName = rsService.getString("service_name");
                double unitPrice = rsService.getDouble("unit_price");
                int quantity = rsService.getInt("service_quantity");
                double discount = rsService.getDouble("discount_percent");
                double total = unitPrice * quantity * (1 - discount / 100);
                totalService += total;

                table.addCell(new Phrase(serviceName, normalFont));
                table.addCell(new Phrase(formatter.format(unitPrice), normalFont));
                table.addCell(new Phrase(String.valueOf(quantity), normalFont));
                table.addCell(new Phrase(discount + "%", normalFont));
                table.addCell(new Phrase(formatter.format(total), normalFont));
            }

            document.add(table);
            Paragraph totalParagraph = new Paragraph("Tổng tiền hóa đơn: " + formatter.format(numberOfDays * pricePerDay + totalService) + " VND", boldFont);
            totalParagraph.setAlignment(Element.ALIGN_RIGHT);
            document.add(totalParagraph);
            document.add(new Paragraph(" "));
            document.add(new Paragraph(" "));
            Paragraph signature = new Paragraph("Chữ ký khách hàng                                                                  Chữ ký nhân viên thanh toán", boldFont);
            signature.setAlignment(Element.ALIGN_CENTER);
            document.add(signature);
            document.close();
            rs.close(); ps.close(); serviceStmt.close(); conn.close();

            // Mở file sau khi in
            JOptionPane.showMessageDialog(this, "Đã tạo hóa đơn: " + fileName);
            Desktop.getDesktop().open(new File(fileName));

        } catch (DocumentException | HeadlessException | IOException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi in hóa đơn: " + e.getMessage());
        }
    }



    private void jToggleButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton13ActionPerformed
        printSelectedInvoice();
    }//GEN-LAST:event_jToggleButton13ActionPerformed

    private void jToggleButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton8ActionPerformed

    private void jToggleButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton9ActionPerformed
        new DoanhThu(accountId).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jToggleButton9ActionPerformed

    private void jToggleButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton14ActionPerformed
        Signin signinForm = new Signin();
        signinForm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jToggleButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            int accountId1 = 1;
            new Invoice(accountId1).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton10;
    private javax.swing.JToggleButton jToggleButton11;
    private javax.swing.JToggleButton jToggleButton12;
    private javax.swing.JToggleButton jToggleButton13;
    private javax.swing.JToggleButton jToggleButton14;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables
}
